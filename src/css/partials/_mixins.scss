@mixin pseudo($content: " ", $top:0, $left:0, $width: 100%, $height: 100%) {
    content: $content;
    display: block;
    position: absolute;
    top: $top;
    left: $left;
    width: $width;
    height: $height;
}

@mixin mq($breakpoint) { 
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: #{map-get($breakpoints, $breakpoint)}) and (-webkit-min-device-pixel-ratio: 1) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. " + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin mqhr($hrbreakpoint) { 
  @if map-has-key($hrbreakpoints, $hrbreakpoint) {
    @media (min-width: #{map-get($hrbreakpoints, $hrbreakpoint)}) and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)  {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$hrbreakpoint}`. " + "Please make sure it is defined in `$breakpoints` map.";
  }
}


@mixin mql($height) { 
  @if map-has-key($heights, $height) {
    @media (max-height: #{map-get($heights, $height)}) and (orientation: landscape) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$height}`. " + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin flex-row($justify-content: center, $flex-wrap: nowrap) {
  display: flex;
  flex-direction: row;
  flex-wrap: $flex-wrap;
  justify-content: $justify-content;
}

@mixin flex-col($flex-wrap: nowrap,$justify-content: center, $align-items: center ) {
	display: flex;
  flex-direction: column;
	flex-wrap: $flex-wrap;
	align-items: $align-items;
  justify-content: $justify-content;
}


@mixin randomShapeSize($className) {
  $i: 1;
  @while $i < 9 {
    .#{$className}--#{$i} { 
     width: floor(40px + 1.3*$i); 
     height: floor(40px + 1.3*$i); 
    }

    $i: $i + 1;
  }
}

@mixin randomShapeSize2($className) {
  $i: 1;
  @while $i < 9 {
    .#{$className}--#{$i} { 
     width: floor(60px + 1.3*$i); 
     height: floor(60px + 1.3*$i); 
    }

    $i: $i + 1;
  }
}


@mixin randomPosition($className) {
  $i: 1;
  @while $i < 9 {
    .#{$className}--#{$i} { 
      position:absolute;
     top: 2*$i + random(80) + %; 
     left: 2*$i + random(70) + %; 
    }

    $i: $i + 1;
  }
}





 

